<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.john.mb.dao.DogDao">

    <!--
        Bean中的字段与数据库中的不同（不能使用驼峰命名mapUnderscoreToCamelCase匹配），直接匹配会为null，
        此时则需要自定义resultMap结果集
        自然主键（比如人的身份证号）和代理主键（id），推荐代理主键，避免业务耦合。
    -->
    <!--id 为起的名称， type 转为实体对象的类型-->
    <resultMap id="dog" type="com.john.mb.bean.Dog">
        <!--id 为主键， result为属性-->
        <!--column为对应的表名，property为对应实体对象的属性-->
        <!--其他 javaType类型范围 jdbcType数据库中类型 typeHandler类型处理器-->
        <id column="id" property="id" />
        <result column="dname" property="name"/>
        <result column="dage" property="age"/>
        <result column="dgender" property="gender"/>
    </resultMap>
<!--    <select id="selectById" resultType="com.john.mb.bean.Dog">-->
<!--        select * from dog where id = #{id}-->
<!--    </select>-->
    <select id="selectById" resultMap="dog">
        select * from dog where id = #{id}
    </select>

    <sql id="sel" >
        select * from dog
    </sql>

</mapper>